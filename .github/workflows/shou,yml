name: List All Environment Variables

on:
  workflow_dispatch: # 允许手动触发工作流
  push:
    branches:
      - main # 或者你希望在哪个分支push时触发

jobs:
  list_env_vars:
    runs-on: ubuntu-latest

    # 这是关键部分：在此处将你的 GitHub Secrets 映射为工作流的环境变量
    # 只有在这里列出的变量，Python脚本才能在运行时读取到。
    env:
      # 全局配置
      DOMAIN: ${{ secrets.DOMAIN }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      CHAT_ID: ${{ secrets.CHAT_ID }}
      GMAIL_SENDER_EMAIL: ${{ secrets.GMAIL_SENDER_EMAIL }}
      GMAIL_SENDER_PASSWORD: ${{ secrets.GMAIL_SENDER_PASSWORD }}
      GMAIL_RECEIVER_EMAIL: ${{ secrets.GMAIL_RECEIVER_EMAIL }}

      # 第一个账号
      USER1: ${{ secrets.USER1 }}
      PASS1: ${{ secrets.PASS1 }}
      C_EMAIL1: ${{ secrets.C_EMAIL1 }} # 可选

      # 第二个账号
      USER2: ${{ secrets.USER2 }}
      PASS2: ${{ secrets.PASS2 }}
      C_EMAIL2: ${{ secrets.C_EMAIL2 }} # 可选

      # 如果有更多账号，请在此处继续添加，例如：
      # USER3: ${{ secrets.USER3 }}
      # PASS3: ${{ secrets.PASS3 }}
      # C_EMAIL3: ${{ secrets.C_EMAIL3 }}

      # 建议：你可以通过循环来生成更多账号的映射，例如 for i in $(seq 3 10); do echo "USER$i: \${{ secrets.USER$i }}"; done
      # 但在 YAML 中直接写出是最清晰的，特别是如果你账号不多。
      # 如果账号很多，可以考虑用 matrix 策略或更复杂的 env 定义来简化。

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # 确保使用兼容的Python版本

    - name: Run Python script to list all environment variables
      run: python list_all_env_vars.py

